{"name": "test_login_with_empty_input", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <pages.amazon_home_page.AmazonHomePage object at 0x7ff822c7b820>, username = ' '\n\n    def login_with_empty_input(self, username):\n        url = self.driver.current_url\n        self.wait.until(EC.element_to_be_clickable(self.NAVIGATION_MENU)).click()\n        self.driver.find_element(*self.EMAIL_INPUT).clear()\n        self.driver.find_element(*self.EMAIL_INPUT).send_keys(username)\n        self.driver.find_element(*self.CONTINUE_BUTTON).click()\n        empty_input = self.driver.find_element(By.XPATH,\n                                               \"//div[contains(text(),'Enter your email or mobile phone number')]\").text\n    \n        # print(ErrorMessage.please_enter_phone_or_email)\n    \n    \n    \n        try:\n>           assert empty_input.lower() == ErrorMessage.please_enter_phone_or_email.lower()\nE           AssertionError\n\npages/amazon_home_page.py:73: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testCases.test_AmazonTest.TestAmazon object at 0x7ff823a29630>\n\n    @pytest.mark.sanity\n    def test_login_with_empty_input(self):\n    \n        amazonHomePage = AmazonHomePage(self.driver)\n>       amazonHomePage.login_with_empty_input(\" \")\n\ntestCases/test_AmazonTest.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.amazon_home_page.AmazonHomePage object at 0x7ff822c7b820>, username = ' '\n\n    def login_with_empty_input(self, username):\n        url = self.driver.current_url\n        self.wait.until(EC.element_to_be_clickable(self.NAVIGATION_MENU)).click()\n        self.driver.find_element(*self.EMAIL_INPUT).clear()\n        self.driver.find_element(*self.EMAIL_INPUT).send_keys(username)\n        self.driver.find_element(*self.CONTINUE_BUTTON).click()\n        empty_input = self.driver.find_element(By.XPATH,\n                                               \"//div[contains(text(),'Enter your email or mobile phone number')]\").text\n    \n        # print(ErrorMessage.please_enter_phone_or_email)\n    \n    \n    \n        try:\n            assert empty_input.lower() == ErrorMessage.please_enter_phone_or_email.lower()\n        except AssertionError as e:\n             allure.attach(self.driver.get_screenshot_as_png(), name='failed_test', attachment_type=AttachmentType.PNG)\n             self.driver.get(url)\n>            assert False\nE            AssertionError\n\npages/amazon_home_page.py:77: AssertionError"}, "attachments": [{"name": "failed_test", "source": "e6311c6c-a85a-4166-9c48-06240c274b73-attachment.png", "type": "image/png"}], "start": 1707889948344, "stop": 1707889950579, "uuid": "a1402ac4-879f-4e23-8086-3f73e51f9c4d", "historyId": "f04a089778552f5417f5d5cb553d20d8", "testCaseId": "f04a089778552f5417f5d5cb553d20d8", "fullName": "testCases.test_AmazonTest.TestAmazon#test_login_with_empty_input", "labels": [{"name": "tag", "value": "sanity"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup', 'log_on_failure')"}, {"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "test_AmazonTest"}, {"name": "subSuite", "value": "TestAmazon"}, {"name": "host", "value": "shashi-Aspire-A715-41G"}, {"name": "thread", "value": "27537-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.test_AmazonTest"}]}