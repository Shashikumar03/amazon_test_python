{"name": "test_validating_payment_page", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <testCases.test_search.TestSearch object at 0x7f605db03040>\n\n    def test_validating_payment_page(self):\n        amazonSearchPage = AmazonSearchedPage(self.driver)\n        amazonSearchPage.validate_selected_item()\n>       amazonSearchPage.validate_payment_page(\"checkout\", \"address\")\n\ntestCases/test_search.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.amazon_search_page.AmazonSearchedPage object at 0x7f605d87ad70>, checkoutText = 'checkout', address = 'address'\n\n    def validate_payment_page(self, checkoutText, address):\n        checkout = self.driver.find_element(By.XPATH, \"//h1[normalize-space()='Checkout']\").text\n        assert checkout.lower().__contains__(checkoutText)\n        delivery_address = self.driver.find_element(By.XPATH,\n                                                    \"//h3[@class='a-color-base clickable-heading \"\n                                                    \"expand-collapsed-panel-trigger']\").text\n        # assert fail\n        assert delivery_address.lower().__contains__(address)\n        self.driver.find_element(By.XPATH, \"//input[@placeholder='Enter Code']\").send_keys(\"discount\")\n        time.sleep(1)\n        self.driver.find_element(By.XPATH, \"//input[@name='ppw-claimCodeApplyPressed']\").click()\n        coupon_failed_test = self.wait.until(EC.visibility_of_element_located(\n            (By.XPATH, \"//p[normalize-space()='The promotional code you entered is not valid.']\"))).text.lower()\n>       assert coupon_failed_test == ErrorMessage.invalid_coupon\nE       AssertionError\n\npages/amazon_search_page.py:52: AssertionError"}, "attachments": [{"name": "stdout", "source": "e5c85b9f-d0cb-466e-9f9f-c06e688d3f12-attachment.txt", "type": "text/plain"}], "start": 1707976010932, "stop": 1707976063077, "uuid": "626015d0-da69-42eb-a98f-e4304473d6ca", "historyId": "efafbd65506533c345b3bd1a582eaf39", "testCaseId": "efafbd65506533c345b3bd1a582eaf39", "fullName": "testCases.test_search.TestSearch#test_validating_payment_page", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup', 'log_on_failure')"}, {"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "test_search"}, {"name": "subSuite", "value": "TestSearch"}, {"name": "host", "value": "shashi-Aspire-A715-41G"}, {"name": "thread", "value": "109651-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.test_search"}]}